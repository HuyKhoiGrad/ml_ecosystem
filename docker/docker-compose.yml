version: '3'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.2.4-python3.9
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
    PYTHONPATH: "$${PYTHONPATH}:/ml_ecosystem"
  env_file:
  - .env
  volumes:
    - ../app:/ml_ecosystem/app
    - ../app/airflow/dags:/opt/airflow/dags
    - ../app/airflow/logs:/opt/airflow/logs
    - ../app/airflow/plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
  redis:
    image: redis:latest
    expose:
      - 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash -c "/bin/bash -c \"$${@}\""
    command: |
      /bin/bash -c "
        airflow db init
        airflow db upgrade
        airflow users create -r Admin -u admin -e airflow@airflow.com -f admin -l user -p airflow
      "
    environment:
      <<: *airflow-common-env
  airflow-scheduler:
      <<: *airflow-common
      command: scheduler
      environment:
        <<: *airflow-common-env
      restart: always
  airflow-worker:
      <<: *airflow-common
      build:
        context: .
        dockerfile: Dockerfile
      command: celery worker
      healthcheck:
        test:
          - "CMD-SHELL"
          - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
        interval: 10s
        timeout: 10s
        retries: 5
      environment:
        <<: *airflow-common-env
        # Required to handle warm shutdown of the celery workers properly
        # See https://airflow.apache.org/docs/docker-stack/entrypoint.html#signal-propagation
        DUMB_INIT_SETSID: "0"
      restart: always
      depends_on:
        <<: *airflow-common-depends-on
        airflow-init:
          condition: service_completed_successfully
  airflow-triggerer:
      <<: *airflow-common
      command: triggerer
      healthcheck:
        test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
        interval: 10s
        timeout: 10s
        retries: 5
      restart: always
      depends_on:
        <<: *airflow-common-depends-on
        airflow-init:
          condition: service_completed_successfully
  airflow-webserver:
      <<: *airflow-common
      command: webserver
      ports:
        - 8080:8080
      healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
        interval: 10s
        timeout: 10s
        retries: 5
      restart: always
      environment:
        <<: *airflow-common-env
